
pipeline {
    agent any
    environment {
        SONAR_URL = "http://54.175.45.67:9000"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "sangativamsikrishna"
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/sangativamsikrishna/Jenkins-Zero-To-Hero.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                script {
                    // build the project and create a JAR file
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                }
            }
        }
        stage('Static Code Analysis') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                    }
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    def dockerTag = "${GIT_USER_NAME}/${GIT_REPO_NAME}:${env.BUILD_NUMBER}"
                    sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${dockerTag} ."
                    def dockerImage = docker.image("${dockerTag}")
                    withCredentials([registry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/')]) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "${GIT_USER_NAME}@example.com"
                            git config user.name "${GIT_USER_NAME}"
                            BUILD_NUMBER=${env.BUILD_NUMBER}
                            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN
